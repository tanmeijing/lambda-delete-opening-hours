# modified from https://github.com/WahlNetwork/github-action-terraform/blob/master/.github/workflows/tf-apply.yml
# and https://gist.github.com/thiagof/b2d95792839accef6254d245253a52cf

name: "Terraform Apply"

# Trigger when commits are pushed to the master branch
on:
  push:
    branches:
      - master

jobs:
  terraform-plan:
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      # Marketplace: https://github.com/marketplace/actions/checkout
      - name: "Setup - Checkout"
        uses: actions/checkout@v2.1.0

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libpoppler-cpp-dev pkg-config python-dev
          pip install --target=python boto3
      - name: zip lambda package
        run: |
          echo "Installing dependencies..."
          pip install --target=code -r ./code/requirements.txt
          echo "Zipping code..."
          zip -r code.zip ./code/*

      # Provides AWS credentials to Terraform
      # By default, Terraform checks the home directory for a .aws folder with a credential file
      # Documentation: https://docs.aws.amazon.com/ses/latest/DeveloperGuide/create-shared-credentials-file.html
      - name: "Setup - Build AWS Credentials"
        run: |
          mkdir -p ~/.aws
          echo "[default]" > ~/.aws/credentials
          echo "aws_access_key_id = ${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials
          echo "aws_secret_access_key = ${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials

      # Downloads a specific version of Terraform CLI and adds it to PATH
      # Marketplace: https://github.com/marketplace/actions/hashicorp-setup-terraform
      - name: "Setup - Terraform CLI"
        uses: hashicorp/setup-terraform@v1.2.1
        with:
          terraform_version: 0.14.7

      # Init pulls credentials from the .aws/credentials file by default
      - name: "Run - Terraform Init"
        run: terraform init -input=false

      # Auto-approve prevents the requirement of human interaction
      - name: "Run - Terraform Apply"
        run: terraform apply -input=false -auto-approve